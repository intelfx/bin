#!/bin/bash

set -eo pipefail
. lib.sh

# sets parent variables:
# $name: option name if call succeeded (if rc=0)
# $value: option value if call succeeded (if rc=0)
# $shift: amount of positions consumed if call succeeded (if rc=0)
getopt_try_get_value() {
	local opt="$1" pos="$2"
	shift 2

	if [[ ${!pos} == "$opt" ]]; then
		local next="$(( pos+1 ))"
		name="${!pos}"
		value="${!next}"
		shift=2
		return 0
	fi

	if [[ ${!pos} =~ ^(${opt})=(.*)$ ]]; then
		name="${BASH_REMATCH[1]}"
		value="${BASH_REMATCH[2]}"
		shift=1
		return 0
	fi

	if [[ ${!pos} =~ ^(${opt})(.+)$ ]]; then
		name="${BASH_REMATCH[1]}"
		value="${BASH_REMATCH[2]}"
		shift=1
		return 0
	fi

	return 1
}

# sets parent variables:
# $name: option name if call succeeded (if rc=0)
# $value: option value if call succeeded (if rc=0)
# $shift: amount of positions consumed if call succeeded (if rc=0)
getopt_try_get_value_optional() {
	local opt="$1" pos="$2"
	shift 2

	if [[ ${!pos} == "$opt" ]]; then
		name="${!pos}"
		value=""
		shift=1
		return 0
	fi

	if [[ ${!pos} =~ ^(${opt})=(.*)$ ]]; then
		name="${BASH_REMATCH[1]}"
		value="${BASH_REMATCH[2]}"
		shift=1
		return 0
	fi

	if [[ ${!pos} =~ ^(${opt})(.+)$ ]]; then
		name="${BASH_REMATCH[1]}"
		value="${BASH_REMATCH[2]}"
		shift=1
		return 0
	fi

	return 1
}

ARG_WATCH=
ARG_WATCH_ARG=
ARGS=()
for (( i=1; i <= $#; )); do
	shift=1
	pass=1
	if getopt_try_get_value_optional '-w' "$i" "$@" || getopt_try_get_value_optional '--watch' "$i" "$@"; then
		pass=0
		ARG_WATCH=1
		ARG_WATCH_ARG="$value"
	fi

	if (( pass )); then
		ARGS+=( "${@:$i:$shift}" )
	fi
	(( i += shift ))
done

if (( ARG_WATCH )); then
	WATCH=( watch --color )
	if (( ARG_WATCH_ARG )); then
		WATCH+=( --interval "$ARG_WATCH_ARG" )
	fi
	SYSTEMD_COLORS=true exec "${WATCH[@]}" /usr/bin/systemctl "${ARGS[@]}"
fi

exec /usr/bin/systemctl "${ARGS[@]}"
