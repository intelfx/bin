#!/bin/bash

set -eo pipefail
shopt -s lastpipe

log() {
	echo ":: $*" >&2
}

err() {
	echo "E: $*" >&2
}

die() {
	err "$@"
	exit 1
}

config_path="$(systemd-path user-configuration)"

GTK_THEME=Adwaita # Arc

# $1: whether to enable dark (1 or 0)
function adjust_gtk3() {
	local gtk3_theme=( Adwaita Adwaita-dark ) #( Arc Arc-Dark )
	#local shell_theme=( Adwaita Adwaita ) #( Arc Arc-Dark )
	local color_scheme=( prefer-light prefer-dark )
	local icon_theme=( 'Papirus-Light' 'Papirus-Dark' )

	dconf write /org/gnome/desktop/interface/color-scheme "'${color_scheme[$1]}'"
	dconf write /org/gnome/desktop/interface/gtk-theme "'${gtk3_theme[$1]}'"
	[[ ! ${shell_theme+set} ]] || \
		dconf write /org/gnome/shell/extensions/user-theme/name "'${shell_theme[$1]}'"
	[[ ! ${icon_theme+set} ]] || \
		dconf write /org/gnome/desktop/interface/icon-theme "'${icon_theme[$1]}'"
}

# $1: whether to enable dark (1 or 0)
function adjust_gedit() {
	local scheme=( solarized-light solarized-dark )

	dconf write /org/gnome/gedit/preferences/editor/scheme "'${scheme[$1]}'"
}

# $1: whether to enable dark (1 or 0)
function adjust_terminal() {
	local profiles_default=( 4b05dbdf-11e8-4f29-b788-7016ec6b6de9
	                         b739b980-6bbc-4e0c-9dda-313ad61029ff )

	# set defaults for new windows
	dconf write /org/gnome/terminal/legacy/profiles:/default "'${profiles_default[$1]}'"

	# XXX: `busctl --auto-start=false tree` appears to not work (i. e. still try to activate the target service),
	# so check availability of org.gnome.Terminal by hand
	busctl --user --acquired --no-pager --no-legend \
		| grep -qw org.gnome.Terminal \
	|| return 0

	# reconfigure existing windows
	local o objects=()
	busctl --auto-start=false --list --user tree org.gnome.Terminal \
		| grep '^/org/gnome/Terminal/window/' \
		| readarray -t objects \
	|| return 0

	for o in "${objects[@]}"; do
		busctl --auto-start=false -j --user call org.gnome.Terminal "$o" org.gtk.Actions Activate "sava{sv}" "profile" "1" "s" "${profiles_default[$1]}" "0" || true
	done
}

function adjust_alacritty() {
	local theme_imports=(
		alacritty.colors-light.yml
		alacritty.colors-dark.yml
	)
	local theme_import_pattern='\<alacritty\.colors-[[:alnum:]]+\.yml\>'
	local alacritty_conf="$config_path/alacritty/alacritty.yml"

	sed -r -e "s|$theme_import_pattern|${theme_imports[$1]}|" -i "$alacritty_conf"
}

# $1: whether to enable dark (1 or 0)
function adjust_builder() {
	local style_variant=( system system ) #( light dark )
	local style_scheme_name=( solarized-light solarized-dark )

	dconf write /org/gnome/builder/style-variant "'${style_variant[$1]}'"
	dconf write /org/gnome/builder/editor/style-scheme-name "'${style_scheme_name[$1]}'"
}

# $1: whether to enable dark (1 or 0)
function adjust_kde() {
	local kdeglobals_variant=(
		kdeglobals-light
		kdeglobals-dark
	)
	local icon_theme=( breeze breeze-dark )
	local kdeglobals_conf="$config_path/kdeglobals"
	local qt5ct_conf="$config_path/qt5ct/qt5ct.conf"

	# Configure Breeze
	cp -a "$(dirname "$kdeglobals_conf")/${kdeglobals_variant[$1]}" "$kdeglobals_conf"
	if command -v kbuildsycoca5 &>/dev/null; then
		kbuildsycoca5
	fi

	# Configure qt5ct
	sed -re "s|^icon_theme=.*|icon_theme=${icon_theme[$1]}|" -i "$qt5ct_conf"
}

# $1: whether to enable dark (1 or 0)
function adjust_kate() {
	local schema=( "Solarized (light)" "Solarized (dark)" )

	sed -re "s|^Schema=.*|Schema=${schema[$1]}|" -i "$config_path/katepartrc"
}

function adjust_delta() {
	local flags=( "delta.dark" "delta.light" )
	local gitconfig="$HOME/.gitconfig.private"


	git config --file "$gitconfig"         "${flags[$((1 - $1))]}" true
	git config --file "$gitconfig" --unset "${flags[$((    $1))]}" ||:
}

#function adjust_stext() {
#	local stext_prefs="$config_path/sublime-text-3/Packages/User/Preferences.sublime-settings"
#	local schema=(
#		"Packages/Solarized Color Scheme/Solarized (light).sublime-color-scheme"
#		"Packages/Solarized Color Scheme/Solarized (dark).sublime-color-scheme"
#	)
#	#local theme=( "Adaptive.sublime-theme" )
#
#	if [[ -e "$stext_prefs" ]]; then
#		jq --arg schema "${schema[$1]}" '.color_scheme |= $schema' \
#			<"$stext_prefs" \
#			| sponge "$stext_prefs"
#	fi
#}

#function adjust_smerge() {
#	local smerge_prefs="$config_path/sublime-merge/Packages/User/Preferences.sublime-settings"
#	local theme=( "Merge.sublime-theme" "Merge Dark.sublime-theme" )
#
#	if [[ -e "$smerge_prefs" ]]; then
#		jq --arg theme "${theme[$1]}" '.theme |= $theme' \
#			<"$smerge_prefs" \
#			| sponge "$smerge_prefs"
#	fi
#}

MODE=()

case "${1:-1}" in
	dark|on|1) MODE=(1) ;;
	light|off|0) MODE=(0) ;;
	*) die "unknown mode: '$1'" ;;
esac
shift

if (( ! $# )); then
	set -- "$@" gtk3 gedit terminal builder alacritty kde kate delta
fi

for arg; do
	"adjust_$arg" "${MODE[@]}"
done
