#!/bin/bash -e

set -eo pipefail
shopt -s lastpipe

. lib.sh

tmpdir=""
cleanup() {
	if [[ "$tmp" ]]; then
		rm -rf "$tmp"
		tmp=''
	fi
}
trap cleanup EXIT
tmpdir="$(mktemp -d)"

declare -A DIR_TEMPLATES FILE_TEMPLATES

into_tmpfile() {
	local tmpfile="$(mktemp --tmpdir="$tmpdir")"
	cat >"$tmpfile"
	echo "$tmpfile"
}

# $1: parent path
# $2: command (mkdir or touch)
path_sample() {
	local parent="$1" name="$2" cmd="$3" rm="$4"

	local tmpdir="$(mktemp -d)"
	getfacl -p "$parent" | setfacl --set-file=- "$tmpdir"

	local sample="$tmpdir/$name"
	"$cmd" "$sample"
	getfacl -p "$sample"
	$rm "$sample"
	rm -d "$tmpdir"
}

path_compute_acl() {
	if ! [[ -e "$file" ]]; then
		die "Bad file: '$file'"
	fi

	parent="${file%/*}"; if [[ $parent == $file ]]; then parent=.; fi
	if ! [[ -d "$parent" ]]; then
		die "Bad parent: '$parent' (file: '$file')"
	fi

	if ! [[ ${DIR_TEMPLATES[$parent]} ]]; then
		DIR_TEMPLATES[$parent]="$(path_sample "$parent" ".tmp.$$.d" 'mkdir' 'rm -d' | into_tmpfile)"
		FILE_TEMPLATES[$parent]="$(path_sample "$parent" ".tmp.$$.f" 'touch' 'rm -f' | into_tmpfile)"
	fi
}

path_apply_acl() {
	parent="${file%/*}"; if [[ $parent == $file ]]; then parent=.; fi

	if [[ -d "$file" ]]; then
		template="${DIR_TEMPLATES[$parent]}"
	else
		template="${FILE_TEMPLATES[$parent]}"
	fi

	if ! [[ "$template" ]]; then
		die "Bad template for '$parent' (file: '$file')"
	fi

	if ! setfacl --set-file="$template" "$file"; then
		die "Failed to reset ACLs: '$file'"
	fi
}

case "$1" in
-R|-r)
	shift
	target="$(realpath -qe "$1")"
	cd "$(dirname "$target")"
	file=.
	path_compute_acl  # parent == .
	find "$(basename "$target")" -type d                        -print0 | parallel -0 --bar -r -N1000 "setfacl --set-file=${DIR_TEMPLATES[.]}"
	find "$(basename "$target")" -not \( -type d -or -type l \) -print0 | parallel -0 --bar -r -N1000 "setfacl --set-file=${FILE_TEMPLATES[.]}"
	;;

-d)
	shift
	cd "$1"
	file=.
	path_compute_acl  # parent == .
	find -mindepth 1 -type d                        -print0 | parallel -0 --bar -r -N1000 "setfacl --set-file=${DIR_TEMPLATES[.]}"
	find -mindepth 1 -not \( -type d -or -type l \) -print0 | parallel -0 --bar -r -N1000 "setfacl --set-file=${FILE_TEMPLATES[.]}"
	;;
*)
	for file; do
		path_compute_acl "$file"
	done

	for file; do
		path_apply_acl "$file"
	done
	;;
esac

