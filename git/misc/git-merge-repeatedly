#!/bin/bash

set -eo pipefail
shopt -s lastpipe

say() {
	echo "${0##*/}: $*" >&2
}

if git merge "$@"; then
	# dance to capture exit code of $SHELL (cannot use ! in the condition)
	:
else
	rc=$?

	# If we have a clean worktree and a clean index immediately after
	# a failed merge invocation, something must have gone wrong
	if git diff-files --quiet && git diff-index --quiet HEAD --; then
		say "merge failed for unknown reason, aborting"
		exit $rc
	fi

	# If (while) we have an unclean worktree, shell out to the user
	while ! git diff-files --quiet; do
		say "launching interactive shell"
		say "to continue, resolve and stage conflicts and exit 0"
		say "to abort, exit 1"
		if "$SHELL" -i; then
			# dance to capture exit code of $SHELL (cannot use ! in the condition)
			:
		else
			rc=$?
			git merge --abort
			exit $rc
		fi
	done

	# If we have an unclean index, commit it
	# Unlike the above, at this point we can also have a clean index too:
	# - if the user not just staged the resolution but committed it, play along
	# - also play along if the index turned out empty
	if ! git diff-index --quiet HEAD --; then
		git commit --no-edit
	fi
fi
