#!/bin/bash

. lib.sh || exit

_usage() {
	cat <<EOF
Usage: $0 PKGBUILD-DIR [PATTERN...]
EOF
}

case "$#" in
0) DIR=.; PATTERNS=( "*" );;
1)
	if [[ -d "$1" && $1 != *[*?]* ]]
	then DIR="$1"; PATTERNS=( "*" )
	else DIR="."; PATTERNS=( "$@" )
	fi
	ambig=1 ;;
*) DIR="$1"; PATTERNS=( "${@:2}" ) ;;
esac

(( !ambig )) || warn "Assuming ${DIR@Q} is target directory and ${PATTERNS[*]@Q} is pattern"
[[ -d "$DIR" && -f "$DIR/PKGBUILD" ]] || usage "Invalid directory: ${DIR@Q}"
cd "$DIR"

SRCDEST="$PWD" # default
eval "$( . /etc/makepkg.conf &>/dev/null; if [[ $SRCDEST ]]; then declare -p SRCDEST; fi )"

mksrcinfo
cat .SRCINFO | sed -nr 's#\tsource(|_[^ ]+) = ((.+)::)?(.+)#\4\t\3#p' | while { unset url name; IFS=$'\t' read url name; }; do
	if ! [[ $url == *://* ]]; then
		# local file, url is name
		continue
	fi

	if ! [[ $name ]]; then
		# plain url -- extract name
		name="${url}"
		name="${name%%#*}"
		name="${name##*/}"
	fi

	scheme="${url%%://}"
	case "${scheme%%+*}" in
	bzr|fossil|git|hg|svn)
		# vcs source
		continue ;;
	*)
		# non-vcs source
		;;
	esac

	if [[ ${PATTERNS+set} ]]; then
		match=
		for p in "${PATTERNS[@]}"; do
			if [[ $name == $p ]]; then
				match=1
			fi
		done
		[[ $match ]] || continue
	fi

	if [[ -e "$SRCDEST/$name" ]]; then
		rm -v "$SRCDEST/$name"
	fi
done
